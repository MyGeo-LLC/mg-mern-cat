{
    "swagger": "2.0",
    "info": {
      "title": "MyGeo LLC API",
      "version": "1.0.0",
      "description": "API documentation for MyGeo LLC application."
    },
    "host": "localhost:5000",
    "basePath": "/api",
    "schemes": [
      "http"
    ],
    "paths": {
      "/auth/login": {
        "post": {
          "summary": "Login a user",
          "tags": ["Auth"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/LoginRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User logged in successfully",
              "schema": {
                "$ref": "#/definitions/LoginResponse"
              }
            },
            "401": {
              "description": "Invalid email or password"
            }
          }
        }
      },
      "/users": {
        "get": {
          "summary": "Get all users",
          "tags": ["Users"],
          "responses": {
            "200": {
              "description": "List of all users",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new user",
          "tags": ["Users"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserRequest"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User created successfully",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Bad request"
            }
          }
        }
      },
      "/users/{id}": {
        "get": {
          "summary": "Get user by ID",
          "tags": ["Users"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "description": "The user ID"
            }
          ],
          "responses": {
            "200": {
              "description": "User details",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "summary": "Update user by ID",
          "tags": ["Users"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "description": "The user ID"
            },
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User updated successfully",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "404": {
              "description": "User not found"
            },
            "400": {
              "description": "Bad request"
            }
          }
        },
        "delete": {
          "summary": "Delete user by ID",
          "tags": ["Users"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "description": "The user ID"
            }
          ],
          "responses": {
            "200": {
              "description": "User deleted successfully"
            },
            "404": {
              "description": "User not found"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/radioheads": {
        "get": {
          "summary": "Get all radio heads",
          "tags": ["RadioHeads"],
          "responses": {
            "200": {
              "description": "List of all radio heads",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/RadioHead"
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new radio head",
          "tags": ["RadioHeads"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/RadioHeadRequest"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Radio head created successfully",
              "schema": {
                "$ref": "#/definitions/RadioHead"
              }
            },
            "400": {
              "description": "Bad request"
            }
          }
        }
      },
      "/radioheads/{id}": {
        "get": {
          "summary": "Get radio head by ID",
          "tags": ["RadioHeads"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "description": "The radio head ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Radio head details",
              "schema": {
                "$ref": "#/definitions/RadioHead"
              }
            },
            "404": {
              "description": "Radio head not found"
            }
          }
        },
        "put": {
          "summary": "Update radio head by ID",
          "tags": ["RadioHeads"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "description": "The radio head ID"
            },
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/RadioHeadRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Radio head updated successfully",
              "schema": {
                "$ref": "#/definitions/RadioHead"
              }
            },
            "404": {
              "description": "Radio head not found"
            },
            "400": {
              "description": "Bad request"
            }
          }
        },
        "delete": {
          "summary": "Delete radio head by ID",
          "tags": ["RadioHeads"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "description": "The radio head ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Radio head deleted successfully"
            },
            "404": {
              "description": "Radio head not found"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/dashboard/real-time-data": {
        "get": {
          "summary": "Get real-time data",
          "tags": ["Dashboard"],
          "responses": {
            "200": {
              "description": "Real-time data",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/RealTimeData"
                }
              }
            }
          }
        }
      },
      "/dashboard/notifications": {
        "get": {
          "summary": "Get notifications",
          "tags": ["Dashboard"],
          "responses": {
            "200": {
              "description": "List of notifications",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Notification"
                }
              }
            }
          }
        }
      },
      "/dashboard/user-settings": {
        "post": {
          "summary": "Update user settings",
          "tags": ["Dashboard"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserSettings"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Settings updated"
            }
          }
        }
      }
    },
    "definitions": {
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "RadioHead": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "settings": {
            "$ref": "#/definitions/RadioHeadSettings"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RadioHeadRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "settings": {
            "$ref": "#/definitions/RadioHeadSettings"
          }
        }
      },
      "RadioHeadSettings": {
        "type": "object",
        "properties": {
          "incomingVolume": {
            "type": "integer"
          },
          "outgoingVolume": {
            "type": "integer"
          },
          "masterVolume": {
            "type": "integer"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "RealTimeData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserSettings": {
        "type": "object",
        "properties": {
          "notificationVerbosity": {
            "type": "string"
          },
          "customization": {
            "type": "object"
          }
        }
      }
    }
  }
  